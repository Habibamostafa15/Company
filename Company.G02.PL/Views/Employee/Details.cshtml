@model Company.DAL.Dtos.CreateEmployeeDto
@using Company.DAL.Dtos

@{
    ViewData["Title"] = "Employee Details";
}

<!-- Custom CSS -->
<style>
    /* General Styling */
    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #f8fafc;
    }

    .profile-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    /* Profile Card */
    .profile-card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        background: linear-gradient(145deg, #ffffff, #f9fafb);
        overflow: hidden;
        transition: transform 0.3s ease;
    }

    .profile-card:hover {
        transform: translateY(-5px);
    }

    .profile-header {
        background: linear-gradient(135deg, #3b82f6, #1e40af);
        padding: 2rem;
        text-align: center;
        color: #fff;
    }

    .profile-img {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 50%;
        border: 4px solid #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }

    .profile-avatar {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        font-weight: 600;
        color: #fff;
        text-transform: uppercase;
        border: 4px solid #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }

    .profile-name {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .profile-email {
        font-size: 1.1rem;
        opacity: 0.9;
    }

    /* Details Sections */
    .details-card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        background: #fff;
        margin-bottom: 1.5rem;
        padding: 1.5rem;
    }

    .details-card h5 {
        font-size: 1.25rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 1rem;
        border-bottom: 2px solid #e5e7eb;
        padding-bottom: 0.5rem;
    }

    .details-row {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .details-item {
        flex: 1;
        min-width: 250px;
    }

    .details-item label {
        font-size: 0.9rem;
        font-weight: 500;
        color: #4b5563;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .details-item p {
        font-size: 1rem;
        color: #1f2937;
        margin: 0.25rem 0 1rem;
    }

    /* Status Dots */
    .status-dot {
        display: inline-flex;
        align-items: center;
        font-size: 0.9rem;
        color: #4b5563;
    }

    .status-dot::before {
        content: '';
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 8px;
        display: inline-block;
    }

    .status-active::before {
        background-color: #22c55e;
    }

    .status-inactive::before {
        background-color: #ef4444;
    }

    .status-deleted::before {
        background-color: #f97316;
    }

    .status-not-deleted::before {
        background-color: #6b7280;
    }

    /* Action Buttons */
    .action-btn {
        background-color: #fff;
        border-radius: 8px;
        padding: 0.5rem 1.5rem;
        font-size: 0.9rem;
        font-weight: 500;
        transition: all 0.3s ease;
        margin: 0.5rem 0.25rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
    }

    .action-btn i {
        margin-right: 6px;
    }

    .btn-edit {
        border: 2px solid #eab308;
        color: #eab308;
    }

    .btn-edit:hover {
        background-color: #eab308;
        color: #fff;
    }

    .btn-delete {
        border: 2px solid #ef4444;
        color: #ef4444;
    }

    .btn-delete:hover {
        background-color: #ef4444;
        color: #fff;
    }

    .btn-back {
        border: 2px solid #6b7280;
        color: #6b7280;
    }

    .btn-back:hover {
        background-color: #6b7280;
        color: #fff;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .profile-img, .profile-avatar {
            width: 100px;
            height: 100px;
        }

        .profile-name {
            font-size: 1.5rem;
        }

        .details-item {
            min-width: 100%;
        }
    }
</style>

<!-- Profile Container -->
<div class="profile-container">
    <!-- Profile Card -->
    <div class="profile-card">
        <div class="profile-header">
            @if (!string.IsNullOrEmpty(Model.ImageName))
            {
                <img src="@Url.Content("~/files/images/" + Model.ImageName)"
                     class="profile-img"
                     alt="@(Model.Name ?? "Employee")'s profile image"
                     onerror="this.src='@Url.Content("~/files/images/default.jpg")'" />
            }
            else
            {
                // Use a dynamic avatar if no image is available
                var bgColor = !string.IsNullOrEmpty(Model.Name)
                    ? $"hsl({(Model.Name.GetHashCode() % 360 + 360) % 360}, 70%, 50%)"
                    : "#6b7280";
                <div class="profile-avatar" style="background-color: @bgColor;">
                    @(string.IsNullOrEmpty(Model.Name) ? "E" : Model.Name.Substring(0, 1))
                </div>
            }
            <h1 class="profile-name">@(Model.Name ?? "Unknown Employee")</h1>
            <p class="profile-email">@(Model.Email ?? "No email provided")</p>
        </div>
    </div>

    <!-- Details Sections -->
    <div class="details-card">
        <h5>Personal Information</h5>
        <div class="details-row">
            <div class="details-item">
                <label>Name</label>
                <p>@(Model.Name ?? "N/A")</p>
            </div>
            <div class="details-item">
                <label>Email</label>
                <p>@(Model.Email ?? "N/A")</p>
            </div>
            <div class="details-item">
                <label>Phone</label>
                <p>@(Model.Phone ?? "N/A")</p>
            </div>
            <div class="details-item">
                <label>Address</label>
                <p>@(Model.Address ?? "N/A")</p>
            </div>
        </div>
    </div>

    <div class="details-card">
        <h5>Employment Details</h5>
        <div class="details-row">
            <div class="details-item">
                <label>Department</label>
                <p>@(Model.DepartmentId.HasValue ? Model.DepartmentId.ToString() : "N/A")</p>
            </div>
            <div class="details-item">
                <label>Salary</label>
                <p>@Model.Salary.ToString("C")</p>
            </div>
            <div class="details-item">
                <label>Hiring Date</label>
                <p>@Model.HiringDate.ToString("dd MMM yyyy")</p>
            </div>
            <div class="details-item">
                <label>Date of Creation</label>
                <p>@Model.CreateAt.ToString("dd MMM yyyy")</p>
            </div>
        </div>
    </div>

    <div class="details-card">
        <h5>Status</h5>
        <div class="details-row">
            <div class="details-item">
                <label>Active</label>
                <p>
                    <span class="status-dot @(Model.IsActive ? "status-active" : "status-inactive")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                </p>
            </div>
            <div class="details-item">
                <label>Deleted</label>
                <p>
                    <span class="status-dot @(Model.IsDeleted ? "status-deleted" : "status-not-deleted")">
                        @(Model.IsDeleted ? "Deleted" : "Not Deleted")
                    </span>
                </p>
            </div>
        </div>
    </div>

    <!-- Actions -->
    <div class="details-card">
        <h5>Actions</h5>
        <div class="d-flex flex-wrap">
            <a asp-controller="Employee" asp-action="Edit" asp-route-id="@Model.Id" class="action-btn btn-edit">
                <i class="bi bi-pencil"></i> Edit
            </a>
            <a asp-controller="Employee" asp-action="Deletes" asp-route-id="@Model.Id" class="action-btn btn-delete"
               onclick="return confirm('Are you sure you want to delete @(Model.Name ?? "this employee")?');">
                <i class="bi bi-trash"></i> Delete
            </a>
            <a asp-controller="Employee" asp-action="Index" class="action-btn btn-back">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>
</div>
